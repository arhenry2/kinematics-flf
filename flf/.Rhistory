library(flf)
library(flf)
?flf
??flf
install.packages(flf)
?flf
??flf
getwd()
library(flf)
library(FaLaFel)
?FaLaFel
??FaLaFel
install.packages(flf)
getwd()
setwd(Desktop)
setwd("~")
getwd()
setwd("Desktop")
getwd()
install.packages(flf)
setwd("flf")
getwd()
install.packages(flf)
install.packages("flf")
install("flf")
install.packages("flf")
flf
devtools::load_all(pkg="flf")
devtools::load_all(flf)
devtools::load_all('flf')
getwd()
setwd('..')
getwd()
devtools::load_all(flf)
devtools::load_all('flf')
library(flf)
flf
flf(1,2,3,4,5,6)
thanks_computer <- "You're welcome"
thanks_computer
thanks_computer
devtools::load_all('flf')
library(flf)
flf(1,2,3,4,5,6)
library("flf")
getwd()
setwd("ashleyhenry")
getwd()
setwd("..")
getwd()
library("flf")
devtools::load_all('flf')
#xnot <- xfinder(x,v0,vf,k,n)
y <- flf(x,50,75,150,1,1) #arbitrary numbers assigned to each parameter to see plot curve
flf
x <- seq(1,100,length=100)
#xnot <- xfinder(x,v0,vf,k,n)
y <- flf(x,50,75,150,1,1) #arbitrary numbers assigned to each parameter to see plot curve
plot(y~x) #plot of flf funtion's arbitrary parameter values
# scope starts here w/ pos and vel
pos <- rawData$V1 #took position values from the rawData dataframe to use here
vel <- rawData$V2 # " w/ velocity values
ll <- function(x0,v0,vf,k,n){
velp <- flf(pos,x0,v0,vf,k,n)
res <- vel-velp
-sum(log(dnorm(res,0,1)))
} # does log likelihood of the residuals to measure the parameters
ll(40,75,150,1,1)
rawData <- read.csv("/Users/ashleyhenry/Desktop/Research/Kinematics/PhytoMorph Output/Col/Col_2,4,6.csv", header = FALSE)
rawData <- read.csv("/Users/ashleyhenry/Desktop/Research/Kinematics/PhytoMorph Output/Col/Col_2,4,6.csv", header = FALSE)
getwd()
setwd("..")
devtools::load_all('flf')
flf
flfW <- function(x,x0,v0,vf,k,n){
v0 <- flfP(x,x0,v0,vf,k,n)
(v0*vf)/(v0^n+(vf^n-v0^n)*exp(-k*(x-x0)))^1/n
} #Morris & Silk 1992 equation (1)
x <- seq(1,100,length=100)
#xnot <- xfinder(x,v0,vf,k,n)
y <- flf(x,50,75,150,1,1) #arbitrary numbers assigned to each parameter to see plot curve
plot(y~x) #plot of flf funtion's arbitrary parameter values
# scope starts here w/ pos and vel
pos <- rawData$V1 #took position values from the rawData dataframe to use here
vel <- rawData$V2 # " w/ velocity values
ll <- function(x0,v0,vf,k,n){
velp <- flf(pos,x0,v0,vf,k,n)
res <- vel-velp
-sum(log(dnorm(res,0,1)))
} # does log likelihood of the residuals to measure the parameters
ll(40,75,150,1,1)
library(stats4)
svel <- sort(vel,decreasing=TRUE)
vfi <- mean(svel[1:30]) #takes average of ordered vel values between the 1st to 30th value)
v0i <- mean(vel)
x0i <- mean(pos)
ni <- 1
ki <- 1
c <- mle(ll, start = list(x0 = x0i, v0=v0i,vf=vfi, k=ki, n=ni))
k <- coef(c)
ll(k[1],k[2],k[3],k[4],k[5]) #gives value of log likelihood of parameters
ypre <- flf(pos,k[1],k[2],k[3],k[4],k[5]) #uses coefficients from mle as the fixed values for the fit for vel & pos
plot(ypre~pos)
plot(vel~pos)
plot(vel~pos,col="blue")
lines(ypre~pos,type="l",col="green")
ypre <- flf(pos,k[1],k[2],k[3],k[4],k[5]) #uses coefficients from mle as the fixed values for the fit for vel & pos
k <- coef(c)
rawData <- read.csv("/Users/ashleyhenry/Desktop/Research/Kinematics/PhytoMorph Output/Col/Col_2,4,6.csv", header = FALSE)
getwd()
setwd("..")
devtools::load_all('flf')
flf
getwd()
setwd("Users")
getwd()
setwd("ashleyhenry")
getwd()
devtools::load_all('flf')
flf
flfW <- function(x,x0,v0,vf,k,n){
v0 <- flfP(x,x0,v0,vf,k,n)
(v0*vf)/(v0^n+(vf^n-v0^n)*exp(-k*(x-x0)))^1/n
} #Morris & Silk 1992 equation (1)
x <- seq(1,100,length=100)
#xnot <- xfinder(x,v0,vf,k,n)
y <- flf(x,50,75,150,1,1) #arbitrary numbers assigned to each parameter to see plot curve
plot(y~x) #plot of flf funtion's arbitrary parameter values
# scope starts here w/ pos and vel
pos <- rawData$V1 #took position values from the rawData dataframe to use here
vel <- rawData$V2 # " w/ velocity values
ll <- function(x0,v0,vf,k,n){
velp <- flf(pos,x0,v0,vf,k,n)
res <- vel-velp
-sum(log(dnorm(res,0,1)))
} # does log likelihood of the residuals to measure the parameters
ll(40,75,150,1,1)
library(stats4)
svel <- sort(vel,decreasing=TRUE)
vfi <- mean(svel[1:30]) #takes average of ordered vel values between the 1st to 30th value)
v0i <- mean(vel)
x0i <- mean(pos)
ni <- 1
ki <- 1
c <- mle(ll, start = list(x0 = x0i, v0=v0i,vf=vfi, k=ki, n=ni))
k <- coef(c)
ll(k[1],k[2],k[3],k[4],k[5]) #gives value of log likelihood of parameters
ypre <- flf(pos,k[1],k[2],k[3],k[4],k[5]) #uses coefficients from mle as the fixed values for the fit for vel & pos
plot(ypre~pos)
plot(vel~pos)
plot(vel~pos,col="blue")
c
?mle
v0i
x0i
vf9
vfi
ki
ni
list(x0i, v0i, vfi, ki, ni)
ll
blah <- list(x0i, v0i, vfi, ki, ni)
mle(ll,blah)
mle(ll,start=blah)
c <- mle(ll, start = list(x0 = x0i, v0=v0i,vf=vfi, k=ki, n=ni))
c
y
x
pos
vel
svel
vel
vfi
svel
ll
ll(1,2,3,4,5)
c <- mle(ll, start = list(x0 = x0i, v0=v0i,vf=vfi, k=ki, n=ni))
size(pos)
object.size(pos)
dim(pos)
pos
ncol(pos)
dim(1)
dim(x0i)
?dim
x
dim(x)
[1 2 3]
c(1,2,3)
dim(c(1,2,3))
ncol(c(1,2,3))
c <- mle(ll, start = list(x0 = x0i, v0=v0i,vf=vfi, k=ki, n=ni))
?solve
?dgesv
??dgesv
#Flexible Logistic Functions without data
flf <- function(x,x0,v0,vf,k,n){
(vf)/(1+exp(-k*(x-x0)))^(1/n)
} #Morris & Silk 1992 equation (8)
rawData <- read.csv("/Users/ashleyhenry/Desktop/Research/Kinematics/PhytoMorph Output/Col/Col_2,4,6.csv", header = FALSE)
x <- seq(1,100,length=100)
#xnot <- xfinder(x,v0,vf,k,n)
y <- flf(x,50,75,150,1,1) #arbitrary numbers assigned to each parameter to see plot curve
plot(y~x) #plot of flf funtion's arbitrary parameter values
# scope starts here w/ pos and vel
pos <- rawData$V1 #took position values from the rawData dataframe to use here
vel <- rawData$V2 # " w/ velocity values
ll <- function(x0,v0,vf,k,n){
velp <- flf(pos,x0,v0,vf,k,n)
res <- vel-velp
-sum(log(dnorm(res,0,1)))
} # does log likelihood of the residuals to measure the parameters
ll(40,75,150,1,1)
library(stats4)
svel <- sort(vel,decreasing=TRUE)
vfi <- mean(svel[1:30]) #takes average of ordered vel values between the 1st to 30th value)
v0i <- mean(vel)
x0i <- mean(pos)
ni <- 1
ki <- 1
c <- mle(ll, start = list(x0 = x0i, v0=v0i,vf=vfi, k=ki, n=ni))
#xnot <- xfinder(x,v0,vf,k,n)
y <- flf(x,50,75,150,1,0.5) #arbitrary numbers assigned to each parameter to see plot curve
plot(y~x) #plot of flf funtion's arbitrary parameter values
#xnot <- xfinder(x,v0,vf,k,n)
y <- flf(x,50,75,150,0.5,0.5) #arbitrary numbers assigned to each parameter to see plot curve
plot(y~x) #plot of flf funtion's arbitrary parameter values
ll(40,75,150,1,1)
ll(40,75,150,0.5,0.5)
ll(40,75,2,0.5,0.5)
vel <- rawData$V2 # " w/ velocity values
vel
ll(40,75,2,0.5,0.5)
rawData <- read.csv("/Users/ashleyhenry/Desktop/Research/Kinematics/PhytoMorph Output/Col/Col_2,4,6.csv", header = FALSE)
#Flexible Logistic Functions without data
flf <- function(x,x0,v0,vf,k,n){
(vf)/(1+exp(-k*(x-x0)))^(1/n)
} #Morris & Silk 1992 equation (8)
flfW <- function(x,x0,v0,vf,k,n){
v0 <- flfP(x,x0,v0,vf,k,n)
(v0*vf)/(v0^n+(vf^n-v0^n)*exp(-k*(x-x0)))^1/n
} #Morris & Silk 1992 equation (1)
x <- seq(1,100,length=100)
#xnot <- xfinder(x,v0,vf,k,n)
y <- flf(x,50,75,150,0.5,0.5) #arbitrary numbers assigned to each parameter to see plot curve
plot(y~x) #plot of flf funtion's arbitrary parameter values
# scope starts here w/ pos and vel
pos <- rawData$V1 #took position values from the rawData dataframe to use here
vel <- rawData$V2 # " w/ velocity values
ll <- function(x0,v0,vf,k,n){
velp <- flf(pos,x0,v0,vf,k,n)
res <- vel-velp
-sum(log(dnorm(res,0,1)))
} # does log likelihood of the residuals to measure the parameters
ll(40,75,2,0.5,0.5)
library(stats4)
svel <- sort(vel,decreasing=TRUE)
vfi <- mean(svel[1:30]) #takes average of ordered vel values between the 1st to 30th value)
v0i <- mean(vel)
x0i <- mean(pos)
ni <- 1
ki <- 1
c <- mle(ll, start = list(x0 = x0i, v0=v0i,vf=vfi, k=ki, n=ni))
#xnot <- xfinder(x,v0,vf,k,n)
y <- flf(x,50,75,2,0.5,0.5) #arbitrary numbers assigned to each parameter to see plot curve
plot(y~x) #plot of flf funtion's arbitrary parameter values
#xnot <- xfinder(x,v0,vf,k,n)
y <- flf(x,50,0.5,2,0.5,0.5) #arbitrary numbers assigned to each parameter to see plot curve
plot(y~x) #plot of flf funtion's arbitrary parameter values
#xnot <- xfinder(x,v0,vf,k,n)
y <- flf(x,50,0.5,100,0.5,0.5) #arbitrary numbers assigned to each parameter to see plot curve
plot(y~x) #plot of flf funtion's arbitrary parameter values
#xnot <- xfinder(x,v0,vf,k,n)
y <- flf(x,50,50,100,0.5,0.5) #arbitrary numbers assigned to each parameter to see plot curve
plot(y~x) #plot of flf funtion's arbitrary parameter values
xnot <- xfinder(x,v0,vf,k,n)
y <- flf(x,50,50,100,0.5,0.5) #arbitrary numbers assigned to each parameter to see plot curve
plot(y~x) #plot of flf funtion's arbitrary parameter values
# scope starts here w/ pos and vel
pos <- rawData$V1 #took position values from the rawData dataframe to use here
vel <- rawData$V2 # " w/ velocity values
ll <- function(x0,v0,vf,k,n){
velp <- flf(pos,x0,v0,vf,k,n)
res <- vel-velp
-sum(log(dnorm(res,0,1)))
} # does log likelihood of the residuals to measure the parameters
ll(40,75,2,0.5,0.5)
library(stats4)
svel <- sort(vel,decreasing=TRUE)
vfi <- mean(svel[1:30]) #takes average of ordered vel values between the 1st to 30th value)
v0i <- mean(vel)
x0i <- mean(pos)
ni <- 1
ki <- 1
c <- mle(ll, start = list(x0 = x0i, v0=v0i,vf=vfi, k=ki, n=ni))
